<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd

     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd

     http://www.springframework.org/schema/task  
	 http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<task:annotation-driven />
	<context:property-placeholder location="classpath:/conf/properties/*.properties"
		ignore-unresolvable="true" file-encoding="UTF-8" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:component-scan
		base-package="com.sapling.spiderMans,com.geccocrawler.gecco.spring" />
	<bean id="springBeanUtils" class="com.sapling.spiderMans.util.SpringBeanUtils" />
	<!-- <context:component-scan base-package="com.geccocrawler.gecco.spring" 
		/> -->
	<!-- <bean id="springPipelineFactory" class="com.geccocrawler.gecco.spring.SpringPipelineFactory" 
		/> <bean id="consolePipeline" class="com.geccocrawler.gecco.spring.ConsolePipeline" 
		/> -->
	<import resource="classpath*:/conf/quartz/spring-quartz.xml" />
	<import resource="classpath*:/conf/cache/spring-redis.xml" />

	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="dbType" value="mysql" />
		<property name="driverClassName" value="${druid.driverClass}" />
		<property name="url" value="${druid.jdbcUrl}" />
		<property name="username" value="${druid.user}" />
		<property name="password" value="${druid.password}" />
		<property name="initialSize" value="${druid.initialPoolSize}" />
		<property name="minIdle" value="${druid.minPoolSize}" />
		<property name="maxActive" value="${druid.maxPoolSize}" />
		<property name="maxWait" value="${druid.checkoutTimeout}" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="null" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="filters" value="wall,stat" />
	</bean>
	<bean id="sqlSessionFactory" class="com.sapling.spiderMans.dao.ExtendSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:conf/sql/*Dao.xml" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.sapling.spiderMans.dao" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="funplatform" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="sys_txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
</beans>